/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2011 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 20000.0;
	SIMULATION_TIME = 20000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 1000.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Inp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Inp[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Inp";
}

SIGNAL("Inp[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Inp";
}

SIGNAL("Inp[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Inp";
}

SIGNAL("Inp[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Inp";
}

SIGNAL("Outp")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Outp[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Outp";
}

SIGNAL("Outp[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Outp";
}

SIGNAL("Outp[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Outp";
}

SIGNAL("Outp[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Outp";
}

SIGNAL("Outp[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Outp";
}

SIGNAL("Outp[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Outp";
}

SIGNAL("Outp[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "Outp";
}

TRANSITION_LIST("Inp[3]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Inp[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
		}
	}
}

TRANSITION_LIST("Inp[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 2500.0;
			LEVEL 1 FOR 2500.0;
		}
	}
}

TRANSITION_LIST("Inp[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 1250.0;
			LEVEL 1 FOR 1250.0;
		}
	}
}

TRANSITION_LIST("Outp[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2507.704;
		LEVEL 0 FOR 2500.0;
		LEVEL 1 FOR 4.073;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 0.657;
		LEVEL 0 FOR 4999.343;
		LEVEL 1 FOR 1246.183;
		LEVEL 0 FOR 3742.04;
	}
}

TRANSITION_LIST("Outp[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1255.744;
		LEVEL 1 FOR 3749.75;
		LEVEL 0 FOR 11250.25;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 2494.256;
	}
}

TRANSITION_LIST("Outp[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1257.964;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 1250.0;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 3.82;
		LEVEL 1 FOR 2495.924;
		LEVEL 0 FOR 2500.0;
		LEVEL 1 FOR 4.076;
		LEVEL 0 FOR 1246.18;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 7492.036;
	}
}

TRANSITION_LIST("Outp[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1255.823;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 2503.822;
		LEVEL 1 FOR 1246.178;
		LEVEL 0 FOR 3749.749;
		LEVEL 1 FOR 4.073;
		LEVEL 0 FOR 2495.927;
		LEVEL 1 FOR 1250.251;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1244.177;
	}
}

TRANSITION_LIST("Outp[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2507.739;
		LEVEL 1 FOR 1250.225;
		LEVEL 0 FOR 5000.0;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 5003.86;
		LEVEL 1 FOR 1246.14;
		LEVEL 0 FOR 1250.0;
		LEVEL 1 FOR 2492.036;
	}
}

TRANSITION_LIST("Outp[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6257.642;
		LEVEL 1 FOR 3749.745;
		LEVEL 0 FOR 3750.255;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 3.829;
		LEVEL 1 FOR 1246.171;
		LEVEL 0 FOR 1250.0;
		LEVEL 1 FOR 2492.358;
	}
}

TRANSITION_LIST("Outp[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1258.235;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 2503.834;
		LEVEL 1 FOR 1246.166;
		LEVEL 0 FOR 2500.0;
		LEVEL 1 FOR 1253.834;
		LEVEL 0 FOR 3746.166;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 1250.0;
		LEVEL 1 FOR 1250.0;
		LEVEL 0 FOR 2491.765;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Inp";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "Inp[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Inp[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Inp[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Inp[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Outp";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "Outp[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Outp[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Outp[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Outp[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Outp[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Outp[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "Outp[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 5;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 0;
	MASTER = FALSE;
}
;
